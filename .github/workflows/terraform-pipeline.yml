name: Terraform Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov checkov pytest-terraform python-terraform
        pip install azure-identity azure-mgmt-resource azure-mgmt-storage
        pip install -r requirements.txt

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Run Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Run Terraform Init
      run: terraform init -backend=false
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Run Terraform Validate
      run: terraform validate
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Run Integration Tests
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        # Run pytest with terraform integration tests
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=html

    - name: Run Checkov
      run: |
        checkov -d . --output-file-path checkov-report.json --output json
        checkov -d . --output-file-path checkov-report.md --output md

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          coverage.xml
          htmlcov/
          checkov-report.json
          checkov-report.md

    - name: Coverage Summary
      run: |
        echo "Python Coverage Summary:"
        coverage report